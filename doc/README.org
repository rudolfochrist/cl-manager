#+STARTUP: showall
#+EXPORT_FILE_NAME: ../README.txt
#+OPTIONS: toc:nil author:nil
# This is just the template README. Export to txt to get the real README.
* NAME

cl-manager --- A Common Lisp Package/System/Project/Library Manager

* VERSION

#+BEGIN_SRC shell :exports results
cat ../version
#+END_SRC

* DISCLAIMER

This is alpha software. Use at own risk!

* SYNOPSIS

#+begin_example
# clmfile
hunchentoot v1.3.1
cl-who
cl-ppcre 
#+end_example

#+begin_src lisp
CL-USER> (clm:install)
; Installing hunchentoot
; Installing cl-who
; Installing alexandria
; Installing bordeaux-threads
; Installing chunga
; Installing cl+ssl
; Installing cl-base64
; Installing cl-fad
; Installing cl-ppcre
; Installing flexi-streams
; Installing md5
; Installing rfc2388
; Installing trivial-backtrace
; Installing usocket
; Installing closer-mop
; Installing global-vars
; Installing postmodern
; Installing split-sequence
; Installing trivial-gray-streams
; Installing cffi
; Installing trivial-features
; Installing trivial-garbage
; Installing ironclad
; Installing uax-15
; Installing babel
; No value
CL-USER> (clm:load-system "FOOBAR")
; Loading FOOBAR with dependencies.
T
#+end_src

* DESCRIPTION

=cl-manage= manages project dependencies with git.

Goals:

- Communication over HTTPS
- Project-level dependencies (with pinning) 
- Minimal loading facilities (good for building executables)

* PREREQUISITES

These programs have to be installed beforehand:

- git
- curl

* INSTALLATION

Just put it somewhere ASDF finds it. I usually put it under =~/common-lisp=
Optionally you can add

#+begin_src lisp
(asdf:load-system "cl-manager" :verbose nil)
#+end_src

in your init file to automatically load it. 

* =clmfile=

The =clmfile= specifies dependencies. Example:

#+begin_example
# This is a comment and is ignored
hunchentoot v1.3.1
cl-who
postmodern
#+end_example

Each dependency can have an optional version specifier. This is a git branch/tag/commit hash. After the
dependencies are installed a =clm.lock= file is written. You want both under version control. 

* FUNCTIONS & VARIABLES

- ~env~ ::
  The CLM environment. Most likely you want that to set to the current working directory. The environment
  determines where dependencies are installed to.

- ~(setf env)~ ::
  Set the environment.

- ~load-system~ ::
  Load a system by name. This works almost as the same as ~asdf:load-system~.

- ~install~ ::
  Looks inside your ~clmfile~ and installs all dependency.

- ~update~ ::
  Updates installed dependencies.

- ~update-index~ ::
  Updates the index CLM refers to about new systems and the dependencies of dependencies. Etc. 

* AUTHOR

Sebastian Christ ([[mailto:rudolfo.christ@pm.me]])

* LICENSE

Released under the MPL-2.0 license.

* SEE ALSO

- [[https://www.quicklisp.org/beta/][Quicklisp]]
- [[https://gitlab.common-lisp.net/clpm/clpm][CLPM]]
- [[https://github.com/emacscollective/borg][borg]]
- [[https://github.com/rudolfochrist/clm-projects][clm-projects]]
